---
import FormattedDate from './FormattedDate.astro';
import { Image } from 'astro:assets';
import commercialImage from '../assets/images/commercial/commercial-content-creation-rochester-ny.jpg';
import type { ImageMetadata } from 'astro';

export interface Props {
  post: {
    slug: string;
    data: {
      title: string;
      description?: string;
      pubDate: Date;
      author?: string;
      tags?: string[];
      image?: ImageMetadata;
      externalLink?: string;
    };
  };
}

const { post } = Astro.props;
const base = import.meta.env.BASE_URL.endsWith('/') ? import.meta.env.BASE_URL : import.meta.env.BASE_URL + '/';
const postUrl = post.data.externalLink || `${base}posts/${post.slug}/`;
const isExternal = !!post.data.externalLink;
---

<article class="post on-list">
  <h2 class="post-title">
    <a href={postUrl} target={isExternal ? "_blank" : undefined} rel={isExternal ? "noopener" : undefined}>
      {post.data.title}
    </a>
  </h2>
  {post.data.tags && post.data.tags.length > 0 && (
    <span class="post-tags">
      {post.data.tags.map((tag, index) => (
        <>
          <a href={`${base}tags/${tag}/`}>{tag}</a>{index < post.data.tags.length - 1 && ', '}
        </>
      ))}
    </span>
  )}
  {post.data.image && (
    <figure class="post-cover">
      <Image src={post.data.title === 'Commercial' ? commercialImage : post.data.image} alt={post.data.title} inferSize={true} style="width: 100%; height: auto;" />
    </figure>
  )}
  {post.data.description && (
    <div class="post-content">
      <p>{post.data.description}</p>
    </div>
  )}
  <div>
    <a href={postUrl} class="read-more button inline" target={isExternal ? "_blank" : undefined} rel={isExternal ? "noopener" : undefined}>
      [Read more]
    </a>
  </div>
</article>